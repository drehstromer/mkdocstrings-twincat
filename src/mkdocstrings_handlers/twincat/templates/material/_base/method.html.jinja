{#- Template for TwinCAT methods.

This template renders a TwinCAT method.

Context:
  method: The method object to render.
  heading_level (int): The HTML heading level to use.
  config (dict): The configuration options.
-#}



<div class="doc doc-object doc-method">
  {% with obj = method, html_id = method.get_identifier() %}

    {% if root %}
      {% set show_full_path = config.show_root_full_path %}
      {% set root_members = True %}
    {% elif root_members %}
      {% set show_full_path = config.show_root_members_full_path or config.show_object_full_path %}
      {% set root_members = False %}
    {% else %}
      {% set show_full_path = config.show_object_full_path %}
    {% endif %}

    {% set method_name = method.get_identifier() if show_full_path else method.name %}
    
    {% if not root or config.show_root_heading %}
      {% filter heading(
          heading_level,
          role="method",
          id=html_id,
          class="doc doc-heading",
          toc_label=(('<code class="doc-symbol doc-symbol-toc doc-symbol-method"></code>&nbsp;')|safe if config.show_symbol_type_toc else '') + (config.toc_label if config.toc_label and root else method.name),
        ) %}

        {% block heading scoped %}
          {#- Heading block.

          This block renders the heading for the function.
          -#}
          {% if config.show_symbol_type_heading %}<code class="doc-symbol doc-symbol-heading doc-symbol-method"></code>{% endif %}
            <span class="doc doc-object-name doc-method-name">{{ config.heading if config.heading and root else method_name }}</span>
        {% endblock heading %}

        {% endfilter %}


    {% else %}

      {% if config.show_root_toc_entry %}
        {% filter heading(
            heading_level,
            role="meth",
            id=html_id,
            toc_label=(('<code class="doc-symbol doc-symbol-toc doc-symbol-method"></code>&nbsp;')|safe if config.show_symbol_type_toc else '') + (config.toc_label if config.toc_label and root else method.name),
            hidden=True,
          ) %}
        {% endfilter %}
      {% endif %}
      {% set heading_level = heading_level - 1 %}
    {% endif %}


    <div class="doc doc-contents {% if root %}first{% endif %}">
      {% block contents scoped %}
        {#- Contents block.

        This block renders the contents of the POU.
        It contains other blocks that users can override.
        Overriding the contents block allows to rearrange the order of the blocks.
        -#}
        
        {% block accessModifier scoped %}
          {#- Inheritance block.

          This block renders the accessModifier.
          -#}
          {% if method.accessModifier and config.show_access_modifier %}
            <p class="doc doc-method-accessModifier">
              Access Modifier: <code>{{ method.accessModifier }}</code>
            </p>
          {% endif %}
        {% endblock accessModifier %}
          
        {% block Return scoped %}
          {% if method.returnType and config.show_return %}
            <p class="doc doc-method-return">
                Return: <code>{{ method.returnType }}</code>
            </p>
          {% endif %}
        {% endblock Return %}

        {% block docstring scoped %}
          {#- Docstring block.

          This block renders the documentation for the method.
          -#}
            {% with documentation=method.documentation %}
                {% include "documentation.html.jinja"%}
            {% endwith %}     
        {% endblock docstring %}

        {% block variables scoped %}
          {#- Variables block.

          This block renders the variables for the POU.
          -#}
            {% with variable_sections=method.variable_sections %}
                {% include "variable_section.html.jinja"%}
            {% endwith %}   
        {% endblock variables %}


        {% block declaration scoped %}
          {#- declaration block.

          This block renders the declaration for the POU.
          -#}

          {% if method.declaration and config.show_source %}
            <details class="quote">
              <summary>"Declaration" </summary>
              {{ method.declaration|highlight(language="pascal", linestart=0, linenums=True) }}
            </details>
          {% endif %}
        {% endblock declaration %}

        {% block implementation scoped %}
          {#- Implementation block.

          This block renders the implementation for the POU.
          -#}

          {% if method.implementation and config.show_source %}
            <details class="quote">
              <summary>"Implementation" </summary>
              {{ method.implementation|highlight(language="pascal", linestart=0, linenums=True) }}
            </details>
          {% endif %}
        {% endblock implementation %}

      {% endblock contents %}
    </div>

  {% endwith %}
</div>
